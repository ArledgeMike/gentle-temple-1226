require 'sinatra'
require 'sinatra/activerecord'
require './environments'


class Cut < ActiveRecord::Base

end


helpers do
  def protected!
    return if authorized?
    headers['WWW-Authenticate'] = 'Basic realm="Restricted Area"'
    halt 401, "Not authorized\n"
  end

  def authorized?
    @auth ||=  Rack::Auth::Basic::Request.new(request.env)
    @auth.provided? and @auth.basic? and @auth.credentials and @auth.credentials == ['admin', 'admin']
  end
end

get "/" do
  @cut = Cut.all
  if !@cut.empty?
    erb :index
  else
    erb :new
  end
end

get "/new" do
  protected!
  erb :new
end

get "/cut_that/:id" do
  @id = params[:id]
  erb :cut, :layout => :base
end

get "/list" do
  @cut = Cut.all
  erb :list
end

post "/new" do
  @cut = Cut.create(:title => params[:title], :body => params[:body])
  redirect "/"
end

get "/delete/:id" do
  @cut = Cut.find(params[:id])
  erb :delete
end

delete "/delete/:id" do
  Cut.delete params[:id]
  redirect "/"
end

get "/update/:id" do
  @cut = Cut.find params[:id]
  erb :update
end

patch "/update/:id" do
  @cut = Cut.find params[:id]
  @cut.title = params[:title]
  @cut.body = params[:body]
  @cut.save
  redirect "/"
end

helpers do
  include Rack::Utils
  alias_method :h, :escape_html
end
